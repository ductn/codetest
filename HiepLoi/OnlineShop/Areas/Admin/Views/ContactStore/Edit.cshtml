@model Model.EF.ContactStore

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/ecab/_Layouts.cshtml";
}

@section header{
    Trả lời liên hệ
}
@section jsFooter{
    <script src="~/assets/jscontroller/ContactStoreController.js"></script>
    <script>
        function cancel() {
            window.history.back();
        }
        //var editor = CKEDITOR.replace('Content', {
        //    toolbarGroups: [
        //                    { name: 'document', groups: ['mode', 'document'] },
        //                    { name: 'insert' },
	       //             ]
        //    //customConfig: '~/Scripts/plugins/ckeditor/config.js',
        //});
        //var editor = CKEDITOR.replace('AnswerContent', {
        //    toolbarGroups: [
        //                    { name: 'document', groups: ['mode', 'document'] },
        //                    { name: 'insert' },
	       //             ]
        //    //customConfig: '~/Scripts/plugins/ckeditor/config.js',
        //});
    </script>
}
<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                @using (@Html.BeginForm("Edit", "ContactStore", FormMethod.Post, new { id = "formContactStore", @class = "frmStyle" }))
                {
                    <div class="row">
                        <div class="col-lg-12">
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group row">
                                @Html.LabelFor(model => model.Name, "Họ tên", htmlAttributes: new { @class = "control-label col-lg-3 col-sm-3" })<span style="color:red">*</span>
                                <div class="col-lg-8 col-sm-8">
                                    @Html.TextBoxFor(model => model.Name, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.Email, "Email", htmlAttributes: new { @class = "control-label col-lg-3 col-sm-3" })<span style="color:red">*</span>
                                <div class="col-lg-8 col-sm-8">
                                    @Html.TextBoxFor(model => model.Email, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.Phone, "Điện thoại", htmlAttributes: new { @class = "control-label col-lg-3 col-sm-3" })<span >&ensp;</span>
                                <div class="col-lg-8 col-sm-8">
                                    @Html.TextBoxFor(model => model.Phone, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.Title, "Tiêu đề", htmlAttributes: new { @class = "control-label col-lg-3 col-sm-3" })<span style="color:red">*</span>
                                <div class="col-lg-8 col-sm-8">
                                    @Html.TextAreaFor(model => model.Title, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.Content, "Nội dung câu hỏi", htmlAttributes: new { @class = "control-label col-lg-3 col-sm-3" })<span style="color:red">*</span>
                                <div class="col-lg-8 col-sm-8">
                                    @Html.TextAreaFor(model => model.Content, new { @class = "form-control", @rows = "10",@disable= "disable" })
                                    @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group row">
                                @Html.LabelFor(model => model.AnswerContent, "Nội dung trả lời", htmlAttributes: new { @class = "control-label col-lg-3 col-sm-3" })<span style="color:red">*</span>
                                <div class="col-lg-8 col-sm-8">
                                    @Html.TextAreaFor(model => model.AnswerContent, new { @class = "form-control", @rows = "10" })
                                    @Html.ValidationMessageFor(model => model.AnswerContent, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            @Html.HiddenFor(model => model.StatusId)

                            <div class="form-group row">
                                <div class="control-label col-md-3 col-sm-3 col-xs-8"></div>
                                <div class="col-md-offset-2 col-lg-8 col-sm-8">
                                    <button type="button" class="btn btn-sm btn-success btnSave" title="Gửi trả lời"><i class="fa fa-save"></i> Gửi trả lời</button>
                                    <button class="btn btn-sm btn-primary" type="button" onclick="cancel();" title="Hủy"><i class="fa fa-reply"></i> Hủy</button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>