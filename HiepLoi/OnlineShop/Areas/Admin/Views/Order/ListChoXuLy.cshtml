@model Model.EF.Order
@using PagedList.Mvc;
@using Model.Dao;
@using Model.EF;
@using ClsCommon;
@{
    ViewBag.Title = "Quản lý liên hệ";
    Layout = "~/Areas/Admin/Views/Shared/ecab/_Layouts.cshtml";
}
@section header{
    Chờ xử lý
}

@section jsFooter{
    <script src="~/assets/jscontroller/StoreController.js"></script>
    <script src="~/assets/layout/jsindex.js"></script>
    <script>
        function funcLamMoi() {
            window.location.href = window.location.href;
        }
    </script>
}
<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            @*<div class="panel-heading">
                    Tin tức chờ công khai
                </div>*@
            <!-- /.panel-heading -->
            <div class="panel-body">
                @using (Html.BeginForm("ListChoXuLy", "Order", FormMethod.Post, new { id = "searchFrom" }))
                {
                    <div class="row form-group">
                        <div class="col-md-10">
                            <div class="SubjectTitle" id="SInfor" runat="server">
                                <legend class="SubjectTitle">
                                    <img alt="" src="@CommonConstants.DomainName/assets/ecab/img/arrow_showless.gif" id="img1" />
                                    <a id="B1" href="#">Tìm kiếm</a>&nbsp;&nbsp;
                                </legend>
                            </div>
                        </div>
                        <div class="col-md-2">
                        </div>
                    </div>
                    <div id="pnlSearch" class="SubjectTitle">
                        <div class="form-group row">
                            @Html.LabelFor(model => model.ShipMobile, "Số điện thoại", htmlAttributes: new { @class = "control-label col-lg-3 col-sm-3" })
                            <div class="col-lg-3 col-sm-9">
                                @Html.TextBoxFor(model => model.ShipMobile, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.ShipMobile, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="row form-group">
                            <div class="col-md-4">

                            </div>
                            <div class="col-md-4">
                                <button type="submit" class="btn btn-success">Tìm kiếm</button>
                                <button type="button" class="btn btn-primary" onclick="funcLamMoi()">Làm mới</button>
                            </div>
                        </div>
                    </div>
                }
                @if (@ViewBag.Total == 0)
                {
                    <p style="text-align:center">{Không có dữ liệu}</p>
                }
                else
                {
                    <div class="table-responsive">
                        <table class="table table-striped table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th width="3%">STT</th>
                                    <th width="10%">Mã đơn hàng</th>
                                    <th width="15%">Ngày mua</th>
                                    <th width="40%">Sản phẩm</th>
                                    <th width="10">Tổng tiền</th>
                                    <th width="10%">Trạng thái</th>
                                    <th width="10%">Thao tác</th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    var stt = 1;
                                }
                                @foreach (var item in ViewBag.ListOrder)
                                {
                                    {
                                        decimal? tongtien = 0;
                                        var sanpham = "";
                                        OrderDetail itOrderDetail = new OrderDetail();
                                        itOrderDetail.OrderID = item.ID;
                                        var lstOrderDetail = new OrderDetailDao().ListAll(itOrderDetail);
                                        foreach (var dt in lstOrderDetail)
                                        {
                                            if (dt.Price != null)
                                            {
                                                tongtien = tongtien + (dt.Quantity * dt.Price);
                                            }
                                            Product sp = new ProductDao().GetByID(dt.ProductID);
                                            if (sp != null)
                                            {
                                                sanpham = sanpham + sp.Name + "|";
                                            }
                                        }
                                        if (sanpham.Length > 0)
                                        {
                                            sanpham = sanpham.Remove(sanpham.Length - 1);
                                        }
                                        <tr id="row_@item.ID" style="background-color:white;">
                                            <td class="text-center">@stt</td>
                                            <td class="text-center">@item.ID</td>
                                            <td class="text-center">@item.CreatedDate</td>
                                            <td class="text-center">@sanpham</td>
                                            <td class="text-center">@tongtien.GetValueOrDefault().ToString("#,##0.###").Replace(",", ".")</td>
                                            <td class="text-center">Đang xử lý</td>
                                            <td class="text-center">
                                                <a title="Xem chi tiết" class="btn btn-primary btn-sm btn-edit" href="~/Admin/Order/View/@item.ID"><i class="fa fa-eye"> Chi tiết</i></a>
                                            </td>
                                        </tr>
                                        stt = stt + 1;
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                    <!-- /.table-responsive -->
                    <!-- pagination -->
                    <div class="row">
                        <div class="col-md-6 pull-left">
                            <div style="margin: 20px 0;">
                                <span style="float: left;line-height: 30px">Số bản ghi trên trang </span>
                                <span style="float: left;padding: 5px 5px;">
                                    <select style="width:50px" size="1" id="filter_count_perpage">
                                        <option value="5">5</option>
                                        <option value="10">10</option>
                                        <option value="25">25</option>
                                        <option value="50">50</option>
                                        <option value="100">100</option>
                                    </select>
                                </span>
                                <span style="float: left;line-height: 30px;margin-right: 5px;">Hiển thị @ViewBag.fromRecord </span>
                                <span style="float: left;line-height: 30px"> đến @ViewBag.toRecord trong tổng số @ViewBag.Total bản ghi.</span>
                            </div>
                        </div>
                        <div class="col-md-6">
                            @{
                                PagedList.IPagedList<Order> listOrder = ViewBag.ListOrder;
                            }
                            @Html.PagedListPager(listOrder, page => Url.Action("Index", new { page, @searchString = @ViewBag.SearchString }), new PagedListRenderOptions
                            {
                           ContainerDivClasses = new string[] { "pull-right" },
                           FunctionToTransformEachPageLink = (li, a) =>
                           {
                               a.Attributes.Add("class", "page-link");
                               li.InnerHtml = a.ToString();
                               return li;
                           },
                           LiElementClasses = new[] { "page-item" },
                           LinkToFirstPageFormat = "«",
                           LinkToPreviousPageFormat = "Trước",
                           LinkToNextPageFormat = "Tiếp",
                           LinkToLastPageFormat = "»",
                           MaximumPageNumbersToDisplay = 2,
                           DisplayEllipsesWhenNotShowingAllPageNumbers = false,
                       })
                        </div>
                    </div>
                    <!-- /pagination -->
                }
            </div>
            <!-- /.panel-body -->
        </div>
    </div>
</div>